#!/bin/bash
set -e

PROGNAME=$(basename $0)

die() {
    echo "$PROGNAME: $*" >&2
    exit 1
}

usage() {
    if [ "$*" != "" ] ; then
        echo "Error: $*"
    fi

    cat << EOF
Usage: $PROGNAME [OPTION ...] [foo] [bar]

Options:
-h, --help                       display this usage message and exit
-c, --clean                      remove all files generated by this script
-d, --data                       make the data.txt for AnoTool
-p, --picturedir [PICTURE DIR]   path to directory containing training images
-r, --percentage [  0 - 100  ]   how many percentage of the data should train
                                 contain, i.e should there be a validation set?
                                 ( default is 100% and thus no validation set)
EOF
    exit 1
}

if [ -z "$1" ]
  then
    usage "No argument supplied"
fi

dodata="false"
data="./../data/data.txt"
train="./../data/train.txt"
validation="./../data/validation.txt"
pic_dir=""
procent=1.00
while [ $# -gt 0 ] ; do
    case "$1" in
    -h|--help)
        usage
        ;;
    -c|--clean)
        if [ -f $data ] ; then
            rm $data
            echo "Removed $data"
        fi
        if [ -f $train ] ; then
            rm $train
            echo "Removed $train"
        fi
        if [ -f $validation ] ; then
            rm $validation
            echo "Removed $validation"
        fi
        exit 0
        ;;
    -d|--data)
        dodata="true"
        ;;
    -p|--picturedir)
        if [ ! -d $2 ] || [ -z $2 ]; then
          die "Directory '$2' not found!"
        fi
        pic_dir="$2"
        shift
        ;;
    -r|--percentage)
        procent=`bc <<<"scale=2; $2 / 100"`
        shift
        ;;
    -*)
        usage "Unknown option '$1'"
        ;;
    *)
        usage "Invalid parameter was provided: '$1'"
        ;;
    esac
    shift
done

if [ "$dodata" == "true" ]; then
  ls $pic_dir | sed -e 's/\..*$//' > $data
  echo ""
  echo "Generated $data"
  exit 1
fi

if [ "$procent" == "1.00" ]; then
  echo ""
  echo "100% in training set"
  find $pic_dir -maxdepth 1 > $train
  sed -i '1d' $train
  echo ""
  echo "Generated $train"
  exit 1
fi

num_lines=`find $pic_dir -maxdepth 1 | wc -l`
num_lines=$((num_lines))
limit=$(expr $num_lines*$procent | bc | awk '{print int($1+0.5)}')

echo $limit

limit=$((limit+1))
find $pic_dir -maxdepth 1 | head -n "$limit" > $train
sed -i '1d' $train

limit=$((limit+1))
find $pic_dir -maxdepth 1 | tail -n +"$limit" > $validation

echo ""
echo "Generated $train"
echo "Generated $validation"
